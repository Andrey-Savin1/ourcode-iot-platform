server:
  port: 9991

spring:
  application:
    name: events-collector-service

  kafka:
    bootstrap-servers: kafka:9092
    consumer:
      group-id: events-collector-group
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: io.confluent.kafka.serializers.KafkaAvroDeserializer
      properties:
        schema.registry.url: http://schema-registry:8081
        specific.avro.reader: true # Чтобы получать POJO вместо GenericRecord
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: io.confluent.kafka.serializers.KafkaAvroSerializer
      properties:
        schema.registry.url: http://schema-registry:8081

  # Конфигурация Cassandra (через DataStax Java Driver)
  cassandra:
    keyspace-name: device
    schema-action: CREATE_IF_NOT_EXISTS
    contact-points:
      - cassandra-node1:9042
      - cassandra-node2:9042
    #  - cassandra-node3:9042
    local-datacenter: datacenter1

  #  datasource:
  #    #    password: cassandra
  #    #    username: cassandra
  #    url: jdbc:cassandra://localhost:9042/device?localdatacenter=datacenter1
  #    driver-class-name: com.ing.data.cassandra.jdbc.CassandraDriver
  #    hikari:
  #      minimum-idle: 1
  #
  # Конфигурация Liquibase (через JDBC драйвер)
#  liquibase:
#    enabled: true
#    url: jdbc:cassandra://localhost:9042/device?compliancemode=Liquibase&localdatacenter=datacenter1
#    change-log: classpath:db.changelog/changelog-master.yaml

logging:
  level:
    ru.savin.eventscollectorservice: DEBUG   # Уровень логов для приложения
    org.springframework: INFO                # Уровень логов Spring
    com.datastax: info                       # Логи Cassandra драйвера
    org.springframework.kafka: DEBUG


topic:
  send-device_id: device-id-topic
  event-listener: events

#Метрики
management:
  server:
    port: 9991
  endpoints:
    web:
      exposure:
        include: health, info, prometheus, metrics
  endpoint:
    health:
      show-details: always
  metrics:
    tags:
      application: events-collector-service
    enable:
      all: true
      kafka.consumer: true
      kafka.producer: true



